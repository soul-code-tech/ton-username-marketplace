import asyncio
import logging
import os
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup

logging.basicConfig(level=logging.INFO)
BOT_TOKEN = os.getenv("BOT_TOKEN")
WALLET_ADDRESS = os.getenv("WALLET_ADDRESS")

if not BOT_TOKEN or not WALLET_ADDRESS:
    logging.error("‚ùå Secrets –Ω–µ –∑–∞–¥–∞–Ω—ã!")
    exit(1)

bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()

@dp.message(Command("start"))
async def start(message: types.Message):
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üéÅ –ü–æ–ª—É—á–∏—Ç—å username", callback_data="get_username")],
        [InlineKeyboardButton(text="üí∞ –ú–æ–∏ –ª–æ—Ç—ã", callback_data="my_listings")],
        [InlineKeyboardButton(text="üõí –ö–∞—Ç–∞–ª–æ–≥", callback_data="catalog")]
    ])
    await message.answer(
        "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ú–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å Username‚Äô–æ–≤!\n\n"
        "–ü–æ–ª—É—á–∏ —É–Ω–∏–∫–∞–ª—å–Ω—ã–π username —á–µ—Ä–µ–∑ @fragment ‚Üí –≤—ã—Å—Ç–∞–≤—å –Ω–∞ –ø—Ä–æ–¥–∞–∂—É ‚Üí –∑–∞—Ä–∞–±–æ—Ç–∞–π TON!",
        reply_markup=keyboard
    )

# –ó–∞–≥–ª—É—à–∫–∞ –ø–æ–¥ –ø–æ–ª—É—á–µ–Ω–∏–µ username
@dp.callback_query(lambda c: c.data == "get_username")
async def get_username(callback_query: types.CallbackQuery):
    # –ü–æ–∑–∂–µ –∑–∞–º–µ–Ω–∏–º –Ω–∞ —Ä–µ–∞–ª—å–Ω–æ–µ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å @fragment
    fake_username = "x7kq"  # –≤—Ä–µ–º–µ–Ω–Ω–æ
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üí∞ –í—ã—Å—Ç–∞–≤–∏—Ç—å –Ω–∞ –ø—Ä–æ–¥–∞–∂—É", callback_data=f"list_{fake_username}")]
    ])
    await callback_query.message.answer(
        f"üéâ –¢–µ–±–µ –¥–æ—Å—Ç–∞–ª—Å—è username: @{fake_username}\n\n"
        f"–•–æ—á–µ—à—å –≤—ã—Å—Ç–∞–≤–∏—Ç—å –µ–≥–æ –Ω–∞ –ø—Ä–æ–¥–∞–∂—É?",
        reply_markup=keyboard
    )

async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
